buildscript {
    repositories {
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url "https://repo.grails.org/grails/core" }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsGradlePluginVersion"
        classpath "gradle.plugin.com.github.erdi.webdriver-binaries:webdriver-binaries-gradle-plugin:2.6"
        classpath "org.grails.plugins:hibernate5:7.3.0"
        classpath "com.bertramlabs.plugins:asset-pipeline-gradle:3.4.7"
    }
}

version "0.1"
group "openboxtest"

apply plugin:"eclipse"
apply plugin:"idea"
apply plugin:"war"
apply plugin:"org.grails.grails-web"
apply plugin:"com.github.erdi.webdriver-binaries"
apply plugin:"org.grails.grails-gsp"
apply plugin:"com.bertramlabs.asset-pipeline"
//apply plugin: 'org.grails.grails-plugin'

repositories {
    mavenCentral()
    maven { url "https://repo.grails.org/grails/core" }
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

// sourceSets {
//     main {
//         groovy {
//             srcDirs = ['grails-app/domain','grails-app/utils','grails-app/services','src/groovy','grails-app/taglib','grails-app/jobs','grails-app/init','grails-app/conf', 'src/main/groovy']
//         }
//     }
// }

// sourceSets {
//     main {
//         groovy {
//             srcDirs = ['src/main/groovy']
//         }
//     }
// }

dependencies {
    developmentOnly("org.springframework.boot:spring-boot-devtools")
    compileOnly "io.micronaut:micronaut-inject-groovy"
    console "org.grails:grails-console"
    implementation "org.springframework.boot:spring-boot-starter-logging"
    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-autoconfigure"
    implementation "org.grails:grails-core"
    implementation "org.springframework.boot:spring-boot-starter-actuator"
    implementation "org.springframework.boot:spring-boot-starter-tomcat"
    implementation "org.grails:grails-web-boot"
    implementation "org.grails:grails-logging"
    implementation "org.grails:grails-plugin-rest"
    implementation "org.grails:grails-plugin-databinding"
    implementation "org.grails:grails-plugin-i18n"
    implementation "org.grails:grails-plugin-services"
    implementation "org.grails:grails-plugin-url-mappings"
    implementation "org.grails:grails-plugin-interceptors"
    implementation "org.grails.plugins:cache"
    implementation "org.grails.plugins:async"
    implementation "org.grails.plugins:scaffolding"
    implementation "org.grails.plugins:hibernate5"
    implementation "org.hibernate:hibernate-core:5.6.11.Final"
    implementation "org.grails.plugins:events"
    implementation "org.grails:grails-web"
    implementation "org.grails.plugins:gsp"
    implementation "fr.opensagres.xdocreport:fr.opensagres.xdocreport.converter.docx.xwpf:2.0.2"
    implementation "fr.w3blog:zebra-zpl:0.0.4"
    implementation "org.apache.httpcomponents:httpclient:4.5.13"
    implementation "org.apache.httpcomponents.client5:httpclient5-fluent:5.3"
    implementation "org.grails.plugins:csv:1.0.1"
    //implementation 'org.grails.plugins:console:1.5.12'
    //implementation 'org.grails.plugins:pdf-viewer:0.1'
    implementation 'com.opencsv:opencsv:5.5.2'
    //implementation 'org.grails.plugins:quartz:2.0.13'

    implementation('org.quartz-scheduler:quartz:2.3.2') {
        /*
         * We currently use tomcat-jdbc, but Quartz pulls in these two
         * alternative pooling libraries. If we see connection issues
         * in Grails 3, we may want to switch to one of these.
         */
        exclude group: 'com.mchange'
        exclude group: 'com.zaxxer'
    }

    implementation 'org.docx4j:docx4j-JAXB-ReferenceImpl:11.4.9'
    implementation 'org.docx4j:docx4j-ImportXHTML:11.4.8'
    implementation 'org.docx4j:docx4j:6.1.2'
    implementation 'org.docx4j:docx4j-export-fo:11.4.9'
    
    implementation 'fr.opensagres.xdocreport:fr.opensagres.xdocreport.document:2.0.4'
    implementation 'org.jxls:jxls:2.14.0'
    implementation 'org.apache.commons:commons-email:1.6.0'
    implementation 'joda-time:joda-time:2.12.5'
    implementation 'org.grails.plugins:excel-import:3.0.2'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'com.google.zxing:core:3.4.1'
    implementation 'com.google.zxing:javase:3.5.2'
    implementation 'org.xhtmlrenderer:flying-saucer-pdf:9.4.1'
    implementation 'org.apache.commons:commons-csv:1.9.0'
    implementation 'com.googlecode.juniversalchardet:juniversalchardet:1.0.3'
    implementation 'io.sentry:sentry:7.1.0'
    implementation 'org.liquibase:liquibase-core:4.25.1'
    implementation 'com.newrelic.agent.java:newrelic-api:8.8.0' 
    implementation 'mysql:mysql-connector-java:5.1.47'
    //implementation 'org.ocpsoft.prettytime:prettytime:5.0.1.Final'
    implementation 'com.ocpsoft:ocpsoft-pretty-time:1.0.7'
    implementation 'org.grails:grails-web-taglib:6.2.0'
    //implementation 'org.grails.plugins:springcache:1.3.1'
    //implementation 'org.grails.plugins:springcache:1.3.1'
    //implementation 'org.codehaus.groovy:groovy-json:3.0.20'

    //implementation 'org.ocpsoft.prettytime:prettytime:5.0.7.Final'
    implementation 'org.grails:grails-web-taglib:6.2.1'
    
    implementation 'org.grails.plugins:grails-redis:3.0.1'
    //implementation 'org.springframework.boot:spring-boot-starter-cache:3.2.2'
    //implementation 'org.grails.plugins:transactional-controller:0.1'
    implementation 'org.grails:grails-web-taglib:6.2.0'
    //implementation 'org.grails.plugins:web:5.3.3'
    

    profile "org.grails.profiles:web"
    runtimeOnly "org.glassfish.web:el-impl:2.2.1-b05"
    runtimeOnly "com.h2database:h2"
    runtimeOnly "org.apache.tomcat:tomcat-jdbc"
    runtimeOnly "javax.xml.bind:jaxb-api:2.3.1"
    runtimeOnly "com.bertramlabs.plugins:asset-pipeline-grails:3.4.7"
    runtimeOnly 'org.grails.plugins:asset-pipeline:3.2.0'
   // runtimeOnly 'org.grails.plugins:ajax-tags:1.0.0'
    testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation "org.grails:grails-gorm-testing-support"
    testImplementation "org.mockito:mockito-core"
    testImplementation "org.grails:grails-web-testing-support"
    testImplementation "org.grails.plugins:geb"
    testImplementation "org.seleniumhq.selenium:selenium-remote-driver:4.0.0"
    testImplementation "org.seleniumhq.selenium:selenium-api:4.0.0"
    testImplementation "org.seleniumhq.selenium:selenium-support:4.0.0"
    testImplementation 'com.google.code.findbugs:jsr305:3.0.2'
    testRuntimeOnly "org.seleniumhq.selenium:selenium-chrome-driver:4.0.0"
    testRuntimeOnly "org.seleniumhq.selenium:selenium-firefox-driver:4.0.0"
}

bootRun {
    ignoreExitValue true
    jvmArgs(
        '-Dspring.output.ansi.enabled=always', 
        '-noverify', 
        '-XX:TieredStopAtLevel=1',
        '-Xmx1024m')
    sourceResources sourceSets.main
    String springProfilesActive = 'spring.profiles.active'
    systemProperty springProfilesActive, System.getProperty(springProfilesActive)
}

tasks.withType(GroovyCompile) {
    configure(groovyOptions) {
        forkOptions.jvmArgs = ['-Xmx1024m']
    }
}

tasks.withType(Test) {
    useJUnitPlatform()
}

webdriverBinaries {
    if (!System.getenv().containsKey('GITHUB_ACTIONS')) {
        chromedriver {
            version = '2.45.0'
            fallbackTo32Bit = true
        }
        geckodriver '0.30.0'
    }
}

tasks.withType(Test) {
    systemProperty "geb.env", System.getProperty('geb.env')
    systemProperty "geb.build.reportsDir", reporting.file("geb/integrationTest")
    if (!System.getenv().containsKey('GITHUB_ACTIONS')) {
        systemProperty 'webdriver.chrome.driver', System.getProperty('webdriver.chrome.driver')
        systemProperty 'webdriver.gecko.driver', System.getProperty('webdriver.gecko.driver')
    } else {
        systemProperty 'webdriver.chrome.driver', "${System.getenv('CHROMEWEBDRIVER')}/chromedriver"
        systemProperty 'webdriver.gecko.driver', "${System.getenv('GECKOWEBDRIVER')}/geckodriver"
    }
}


assets {
    minifyJs = true
    minifyCss = true
}


