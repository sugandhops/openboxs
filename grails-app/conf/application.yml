---
grails:
  config:
  locations:
    - "classpath:${appName}-config.properties"
    - "classpath:${appName}-config.groovy"
    - "file:${userHome}/.grails/${appName}-config.properties"
    - "file:${userHome}/.grails/${appName}-config.groovy"
    - "file:${userHome}/grails-app/conf/Config.groovy"

  profile: web
  codegen:
    defaultPackage: openboxes
  gorm:
    reactor:
      # Whether to translate GORM events into Reactor events
      # Disabled by default for performance reasons
      events: false

  cache:
    cacheManager: GrailsConcurrentLinkedMapCacheManager
    caches:
      message:
        maxCapacity: 5000
      maps:
        maxCapacity: 6000
info:
  app:
    name: "@info.app.name@"
    version: "@info.app.version@"
    grailsVersion: "@info.app.grailsVersion@"
spring:
  jmx:
    unique-names: true
  main:
    banner-mode: "off"
  groovy:
    template:
      check-template-location: false
  devtools:
    restart:
      additional-exclude:
        - "*.gsp"
        - "**/*.gsp"
        - "*.gson"
        - "**/*.gson"
        - "logback.groovy"
        - "*.properties"
environments:
  development:
    openboxes:
            apiUrl: "http://192.168.1.15:8080/api"
    management:
      endpoints:
        enabled-by-default: true
        web:
          base-path: "/actuator"
          exposure:
            include: "*"
  production:
    management:
      endpoints:
        enabled-by-default: false
  resources:
    pattern: "/images/**"

    adhoc:
      includes: []
      excludes: ["*"]

  mime:
    file:
      extensions: true
    use:
      accept:
        header: false
    types:
      html: ["text/html", "application/xhtml+xml"]
      xml: ["text/xml", "application/xml"]
      text: "text/plain"
      js: "text/javascript"
      rss: "application/rss+xml"
      atom: "application/atom+xml"
      css: "text/css"
      csv: "text/csv"
      all: "*/*"
      json: ["application/json", "text/json"]
      form: "application/x-www-form-urlencoded"
      multipartForm: "multipart/form-data"

---
grails:
  mime:
    disable:
      accept:
        header:
          userAgents:
            - Gecko
            - WebKit
            - Presto
            - Trident
    types:
      all: "*/*"
      atom: application/atom+xml
      css: text/css
      csv: text/csv
      form: application/x-www-form-urlencoded
      html:
        - text/html
        - application/xhtml+xml
      js: text/javascript
      json:
        - application/json
        - text/json
      multipartForm: multipart/form-data
      pdf: application/pdf
      rss: application/rss+xml
      text: text/plain
      hal:
        - application/hal+json
        - application/hal+xml
      xml:
        - text/xml
        - application/xml
  urlmapping:
    cache:
      maxsize: 1000
  controllers:
    defaultScope: singleton
  converters:
    encoding: UTF-8
  views:
    default:
      codec: html
    gsp:
      encoding: UTF-8
      htmlcodec: xml
      codecs:
        expression: html
        scriptlet: html
        taglib: none
        staticparts: none
      enabled: true
  taglib:
    enabled: true      
---
hibernate:
  allow_update_outside_transaction: true
  cache:
    queries: false
    use_second_level_cache: false
    use_query_cache: false
dataSource:
  pooled: true
  jmxExport: true
  driverClassName: org.h2.Driver
  username: sa
  password: ""

environments:
  development:
    dataSource:
      dumpQueriesOnException: true
      formatSql: true
      includeInnodbStatusInDeadlockExceptions: true
      driverClassName: "com.mysql.jdbc.Driver"
      logAbandoned: true
      logSql: false
      logSlowQueries: true
      username: "openboxes"
      password: "openboxes"
      url: jdbc:mysql://localhost:3306/openboxes?serverTimezone=UTC&useSSL=false
    grails:
      plugins:
          raven:
              active: false
              dsn: "https://{PUBLIC_KEY}:{SECRET_KEY}@app.getsentry.com/{PROJECT_ID}"  
  test:
    dataSource:
      dbCreate: update
      url: jdbc:h2:mem:testDb;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
  production:
    dataSource:
      dbCreate: none
      url: jdbc:h2:./prodDb;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
      properties:
        jmxEnabled: true
        initialSize: 5
        maxActive: 50
        minIdle: 5
        maxIdle: 25
        maxWait: 10000
        maxAge: 600000
        timeBetweenEvictionRunsMillis: 5000
        minEvictableIdleTimeMillis: 60000
        validationQuery: SELECT 1
        validationQueryTimeout: 3
        validationInterval: 15000
        testOnBorrow: true
        testWhileIdle: true
        testOnReturn: false
        jdbcInterceptors: ConnectionState
        defaultTransactionIsolation: 2 # TRANSACTION_READ_COMMITTED
    grails:
      plugins:
          raven:
              active: false
              dsn: "https://{PUBLIC_KEY}:{SECRET_KEY}@app.getsentry.com/{PROJECT_ID}"      

openboxes:
  locale:
    defaultLocale: "en"
    localizationModeLocale: "ach"
    supportedLocales:
      ["ar", "ach", "de", "en", "es", "fr", "ht", "it", "pt", "fi", "zh"]
      
    defaultCurrencyCode: "USD"
    defaultCurrencySymbol: '\$'
    supportedCurrencyCodes: ["USD", "CAD", "EUR", "GBP"]
  jobs:
    refreshProductAvailabilityJob:
      enabled: true
      cronExpression: "0 0 0/2 * * ?"
      delayStart: true
      delayInMilliseconds: 5000

  menuSectionsUrlParts:
    inventory:
      - inventory
      - inventoryItem
      - stockTransfer
    products:
      - product
    purchasing:
      - purchaseOrder
    invoicing:
      - invoice
    outbound:
      - verifyRequest
    requisitionTemplate:
      - requisitionTemplate
    configuration:
      - locationsConfiguration
    injectedDirectly:
      - stockMovement
      - order    
  
  megamenu:
    dashboard:
      enabled: true
      label: "dashboard.label"
      defaultLabel: "Dashboard"
      href: "/dashboard/index"
    analytics:
      enabled: true
      label: "analytics.label"
      defaultLabel: "Analytics"
      menuItems:
        - label: "inventory.browse.label"
          defaultLabel: "Browse Inventory"
          href: "/inventoryBrowser/index"
        - label: "inventory.snapshot.label"
          defaultLabel: "Inventory Snapshots"
          href: "/snapshot/list"
        - label: "consumption.report.label"
          defaultLabel: "Consumption Report"
          href: "/consumption/list"
    inventory:
      enabled: true
      label: "inventory.label"
      defaultLabel: "Inventory"
      menuItems:
        - label: "inventory.browse.label"
          defaultLabel: "Browse Inventory"
          href: "/inventory/browse?resetSearch=true"
        - label: "inventory.manage.label"
          defaultLabel: "Manage Inventory"
          href: "/inventory/manage"
        - label: "inventory.import.label"
          defaultLabel: "Import Inventory"
          href: "/batch/importData?type=inventory&execution=e1s1"
        - label: "inventory.createStockTransfer.label"
          defaultLabel: "Create Stock Transfer"
          href: "/stockTransfer/create"
        - label: "inventory.listStockTransfers.label"
          defaultLabel: "List Stock Transfers"
          href: "/stockTransfer/list"
        - label: "inventory.createReplenishment.label"
          defaultLabel: "Create Replenishment"
          href: "/replenishment/create"
    purchasing:
      enabled: true
      label: "order.purchasing.label"
      defaultLabel: "Purchasing"
      menuItems:
        - label: "order.createPurchase.label"
          defaultLabel: "Create Purchase Order"
          href: "/purchaseOrder/create"
        - label: "order.listPurchase.label"
          defaultLabel: "List Purchase Orders"
          href: "/purchaseOrder/list"
        - label: "location.listSuppliers.label"
          defaultLabel: "List Suppliers"
          href: "/supplier/list"
        - label: "shipment.shipfromPO.label"
          defaultLabel: "Ship from Purchase Order"
          href: "/stockMovement/createCombinedShipments?direction=INBOUND"
        - label: "dashboard.supplierDashboard.label"
          defaultLabel: "Supplier Dashboard"
          href: "/dashboard/supplier"
    invoicing:
      enabled: true
      label: "react.invoicing.label"
      defaultLabel: "Invoicing"
      menuItems:
        - label: "react.invoice.createInvoice.label"
          defaultLabel: "Create Invoice"
          href: "/invoice/create"
        - label: "react.invoice.list.label"
          defaultLabel: "List Invoices"
          href: "/invoice/list"
    inbound:
      enabled: true
      label: "default.inbound.label"
      defaultLabel: "Inbound"
      requiredActivitiesAny: ["RECEIVE_STOCK"]
      menuItems:
        - label: "stockMovements.label"
          defaultLabel: "Stock Movements"
        - label: "inbound.create.label"
          defaultLabel: "Create Inbound Movement"
          href: "/stockMovement/createInbound?direction=INBOUND"
        - label: "stockRequest.create.label"
          defaultLabel: "Create Stock Request"
          href: "/stockMovement/createRequest"
        - label: "inbound.list.label"
          defaultLabel: "List Inbound Movements"
          href: "/stockMovement/list?direction=INBOUND"
        - label: "inboundReturns.create.label"
          defaultLabel: "Create Inbound Return"
          href: "/stockTransfer/createInboundReturn"
        - label: "putAways.label"
          defaultLabel: "Putaways"
        - label: "react.putAway.createPutAway.label"
          defaultLabel: "Create Putaway"
          href: "/putAway/create"
        - label: "react.putAway.list.label"
          defaultLabel: "List Putaways"
          href: "/order/list?orderType=PUTAWAY_ORDER&status=PENDING"
        - label: "receiving.label"
          defaultLabel: "Receiving"
        - label: "shipping.createIncomingShipment.label"
          defaultLabel: "Create inbound shipment"
          href: "/createShipmentWorkflow/createShipment?type=INCOMING"
        - label: "shipping.listIncoming.label"
          defaultLabel: "List Inbound Shipments"
          href: "/shipment/list?type=incoming"
        - label: "default.all.label"
          defaultLabel: "All"
          href: "/shipment/list?type=incoming"      
    configuration:
      enabled: true
      label: "configuration.label"
      defaultLabel: "Configuration"
      menuItems:
        - label: "admin.label"
          defaultLabel: "Administration"
          href: "#"
        - label: "default.settings.label"
          defaultLabel: "Settings"
          href: "/admin/showSettings"
        - label: "cache.label"
          defaultLabel: "Cache"
          href: "/admin/cache"
        - label: "console.label"
          defaultLabel: "Console"
          href: "/console/index"
        - label: "dataImport.label"
          defaultLabel: "Data Import"
          href: "/batch/importData"
        - label: "dataMigration.label"
          defaultLabel: "Data Migration"
          href: "/migration/index"
        - label: "email.label"
          defaultLabel: "Email"
          href: "/admin/sendMail"
        - label: "localization.label"
          defaultLabel: "Localization"
          href: "/localization/list"
        - label: "locations.label"
          defaultLabel: "Locations"
          href: "#"  
        - label: "locations.label"
          defaultLabel: "Locations"
          href: "/location/list"
        - label: "locationGroups.label"
          defaultLabel: "Location groups"
          href: "/locationGroup/list"
        - label: "locationTypes.label"
          defaultLabel: "Location types"
          href: "/locationType/list"
        - label: "organizations.label"
          defaultLabel: "Organizations"
          href: "/organization/list"
        - label: "partyRoles.label"
          defaultLabel: "Party roles"
          href: "/partyRole/list"
        - label: "partyTypes.label"
          defaultLabel: "Party types"
          href: "/partyType/list"
        - label: "person.list.label"
          defaultLabel: "People"
          href: "/person/list"
        - label: "roles.label"
          defaultLabel: "Roles"
          href: "/role/list"
        - label: "users.label"
          defaultLabel: "Users"
          href: "/user/list"
        - label: "transactionsTypes.label"
          defaultLabel: "Transactions Types"
          href: "#"  
        - label: "transactionsTypes.label"
          defaultLabel: "Transactions Types"
          href: "/transactionType"
        - label: "transactions.label"
          defaultLabel: "Transactions"
          href: "/inventory/listAllTransactions"
        - label: "transaction.add.label"
          defaultLabel: "Add transaction"
          href: "/inventory/editTransaction"
        - label: "import.inventory.label"
          defaultLabel: "Import Inventory"
          href: "/batch/importData?type=inventory"
        - label: "import.inventoryLevel.label"
          defaultLabel: "Import Inventory Level"
          href: "/batch/importData?type=inventoryLevel"
        - label: "default.other.label"
          defaultLabel: "Other"
          href: "#"  
        - label: "budgetCode.label"
          defaultLabel: "Budget Code"
          href: "/budgetCode/list"
        - label: "containerTypes.label"
          defaultLabel: "Container Types"
          href: "/containerType/list"
        - label: "documents.label"
          defaultLabel: "Documents"
          href: "/document/list"
        - label: "documentTypes.label"
          defaultLabel: "Document Types"
          href: "/documentType/list"
        - label: "eventTypes.label"
          defaultLabel: "Event Types"
          href: "/eventType/list"
        - label: "glAccountType.label"
          defaultLabel: "GL Account Type"
          href: "/glAccountType/list"
        - label: "glAccount.label"
          defaultLabel: "GL Account"
          href: "/glAccount/list"
        - label: "orderAdjustmentType.label"
          defaultLabel: "Order Adjustment Type"
          href: "/orderAdjustmentType/list"
        - label: "paymentMethodTypes.label"
          defaultLabel: "Payment Method Types"
          href: "/paymentMethodType/list"
        - label: "paymentTerms.label"
          defaultLabel: "Payment Terms"
          href: "/paymentTerm/list"
        - label: "preferenceType.label"
          defaultLabel: "Preference Type"
          href: "/preferenceType/list"
        - label: "shippers.label"
          defaultLabel: "Shippers"
          href: "/shipper/list"
        - label: "shipmentWorkflows.label"
          defaultLabel: "Shipment Workflows"
          href: "/shipmentWorkflow/list"
        - label: "productsConfiguration.label"
          defaultLabel: "Categories and Products Configuration"
          href: "/productsConfiguration/index"
        - label: "locationsConfiguration.label"
          defaultLabel: "Locations Configuration"
          href: "/locationsConfiguration/index"
        - label: "loadData.label"
          defaultLabel: "Load Data"
          href: "/loadData/index"
        - label: "resetInstance.label"
          defaultLabel: "Reset your instance"
          href: "/resettingInstanceInfo/index"
          




  logo:
    url: "/openboxestest/images/logo/openboxes_logo_40x40.jpg"
    label: ""
  report:
    logo:
      url: "https://openboxes.com/img/logo_100.png"
  dashboard:
    column1:
      widgets: ["requisitionItemSummary", "requisitionSummary", "receiptSummary", "shipmentSummary", "indicatorSummary"]
    column2:
      widgets: ["binLocationSummary", "expiringSummary", "productSummary", "genericProductSummary"]
    column3:
      widgets: ["newsSummary", "activitySummary", "valueSummary", "tagSummary", "catalogsSummary"]
    # Column 1
    requisitionItemSummary:
        enabled: true
    requisitionSummary:
        enabled: false
    receiptSummary:
        enabled: true
    shipmentSummary:
        enabled: true
    indicatorSummary:
        enabled: false
    # Column 2
    binLocationSummary:
      enabled: true
    productSummary:
      enabled: true
    genericProductSummary:
      enabled: false
    expiringSummary:
      enabled: true
    # Column 3
    newsSummary:
      enabled: true
    activitySummary:
      enabled: true
    valueSummary:
      enabled: false
    tagSummary:
      enabled: true
    catalogsSummary:
      enabled: true
      newsSummary:
      newsItems: []
      rssUrl: "https://openboxes.com/blog/index.xml"
      limit: 25  
    yearTypes:
      fiscalYear:
        start: "07/01" # format: MM/DD, For PIH and the Govt of Dominica fiscal year start July 1
        end: "06/30" # format: MM/DD
        labelYearPrefix: "FY "
        yearFormat: "yy"
      calendarYear:
        start: "01/01"
        end: "12/31"
        labelYearPrefix: ""
        yearFormat: "yyyy"  
  mainDashboardId: "mainDashboard"
  dashboards:
    mainDashboard:
      personal:
        name: "My Dashboard"
        filters: {}
        widgets:
          - widgetId: "inventoryByLotAndBin"
            order: 1
          - widgetId: "receivingBin"
            order: 2
          - widgetId: "inProgressShipments"
            order: 3
          - widgetId: "inProgressPutaways"
            order: 4
          - widgetId: "inventorySummary"
            order: 1
          - widgetId: "expirationSummary"
            order: 2
          - widgetId: "incomingStock"
            order: 3
          - widgetId: "outgoingStock"
            order: 4
          - widgetId: "delayedShipments"
            order: 5
          - widgetId: "discrepancy"
            order: 6
    warehouses:
      - name: "Warehouse Management"
        filters: {}
        widgets:
          - widgetId: "inventoryByLotAndBin"
            order: 1
          - widgetId: "receivingBin"
            order: 2
          - widgetId: "inProgressShipments"
            order: 3
          - widgetId: "inProgressPutaways"
            order: 4
          - widgetId: "inventorySummary"
            order: 1
          - widgetId: "expirationSummary"
            order: 2
          - widgetId: "incomingStock"
            order: 3
          - widgetId: "outgoingStock"
            order: 4
          - widgetId: "delayedShipments"
            order: 5
          - widgetId: "discrepancy"
            order: 6
    inventory:
      - name: "Inventory Management"
        filters: {}
        widgets:
          - widgetId: "receivingBin"
            order: 1
          - widgetId: "defaultBin"
            order: 2
          - widgetId: "negativeInventory"
            order: 3
          - widgetId: "expiredStock"
            order: 4
          - widgetId: "openStockRequests"
            order: 5
          - widgetId: "delayedShipments"
            order: 1
          - widgetId: "productsInventoried"
            order: 2    
    transaction:
      - name: "Transaction Management"
        filters: {}
        widgets:
          - widgetId: "fillRateSnapshot"
            order: 1
          - widgetId: "receivedStockMovements"
            order: 1
          - widgetId: "sentStockMovements"
            order: 2
          - widgetId: "lossCausedByExpiry"
            order: 3
          - widgetId: "percentageAdHoc"
            order: 4
          - widgetId: "fillRate"
            order: 5
          - widgetId: "stockOutLastMonth"
            order: 6  
    fillRate:
      - name: "Fill Rate"
        filters:
          category:
            endpoint: "/${appName}/categoryApi/list"
        widgets:
          - widgetId: "fillRateSnapshot"
            order: 1
          - widgetId: "fillRate"
            order: 1 
  supplier:
    supplier:
      name: "Supplier Dashboard"
      filters:
        supplier:
          endpoint: "/${appName}/api/locations?direction=INBOUND"
      widgets:
        - widgetId: "numberOfOpenPurchaseOrders"
          order: 1  
  # TODO: OBPIH-4384 Refactor indicator filters to be more generic (currently filters are hardcoded on the frontend, these should be defined here and rendered there basing on config)                                               
  dashboardWidgets:
    inProgressPutaways:
      enabled: true
      title: "react.dashboard.inProgressPutaways.title.label"
      info: "react.dashboard.inProgressPutaways.info.label"
      subtitle: "react.dashboard.subtitle.putaways.label"
      numberType: "number"
      type: "number"
      endpoint: "/${appName}/api/dashboard/inProgressPutaways"
    inventoryByLotAndBin:
      enabled: true
      title: "react.dashboard.inventoryByLotAndBin.title.label"
      info: "react.dashboard.inventoryByLotAndBin.info.label"
      subtitle: "react.dashboard.subtitle.inStock.label"
      numberType: 'number'
      type: 'number'
      endpoint: "/${appName}/api/dashboard/inventoryByLotAndBin"  
    inProgressShipments:
      enabled: true
      title: "react.dashboard.inProgressShipments.title.label"
      info: "react.dashboard.inProgressShipments.info.label"
      subtitle: "react.dashboard.subtitle.shipments.label"
      numberType: 'number'
      type: 'number'
      endpoint: "/${appName}/api/dashboard/inProgressShipments"  
    receivingBin:
      enabled : true
      title : "react.dashboard.receivingBin.title.label"
      info : "react.dashboard.receivingBin.info.label"
      subtitle : "react.dashboard.subtitle.products.label"
      numberType : 'number'
      type : 'number'
      endpoint : "/${appName}/api/dashboard/receivingBin" 
    defaultBin:
      enabled: true
      title: "react.dashboard.defaultBin.title.label"
      info: "react.dashboard.defaultBin.info.label"
      subtitle: "react.dashboard.subtitle.products.label"
      numberType: 'number'
      type: 'number'
      endpoint: "/${appName}/api/dashboard/defaultBin"  
    negativeInventory:
      enabled: true
      title: "react.dashboard.productWithNegativeInventory.title.label"
      info: "react.dashboard.productWithNegativeInventory.info.label"
      subtitle: "react.dashboard.subtitle.products.label"
      numberType: 'number'
      type: 'number'
      endpoint: "/${appName}/api/dashboard/productWithNegativeInventory"  
    expiredStock:
      enabled: true
      title: "react.dashboard.expiredProductsInStock.title.label"
      info: "react.dashboard.expiredProductsInStock.info.label"
      subtitle: "react.dashboard.subtitle.products.label"
      numberType: 'number'
      type: 'number'
      endpoint: "/${appName}/api/dashboard/expiredProductsInStock"  
    openStockRequests:
      enabled: true
      title: "react.dashboard.openStockRequests.title.label"
      info: "react.dashboard.openStockRequests.info.label"
      subtitle: "react.dashboard.requests.subtitle.label"
      numberType: 'number'
      type: 'number'
      endpoint: "/${appName}/api/dashboard/openStockRequests"  
    inventoryValue:
      enabled: true
      title: "react.dashboard.inventoryValue.title.label"
      info: ''
      subtitle: "react.dashboard.subtitle.inStock.label"
      numberType: 'dollars'
      type: 'number'
      endpoint: "/${appName}/api/dashboard/inventoryValue"  
    fillRateSnapshot:
      enabled: true
      title: "react.dashboard.fillRateSnapshot.title.label"
      info: "react.dashboard.fillRateSnapshot.info.label"
      graphType: 'sparkline'
      type: 'number'
      endpoint: "/${appName}/api/dashboard/fillRateSnapshot"  
    requisitionCountByYear:
      enabled: true
      title: "react.dashboard.requisitionCountByYear.title.label"
      info: "react.dashboard.requisitionCountByYear.info.label"
      graphType: "bar"
      type: 'graph'
      endpoint: "/${appName}/api/dashboard/requisitionsByYear"
      yearTypeFilter:
        parameter: "yearType"
        defaultValue: "fiscalYear"
        options:
          - label: "react.dashboard.fiscalYear.label"
            value: "fiscalYear"
          - label: "react.dashboard.calendarYear.label"
            value: "calendarYear"  
    inventorySummary :
      enabled : true
      title : "react.dashboard.inventorySummaryData.title.label"
      info : "react.dashboard.inventorySummaryData.info.label"
      graphType : "horizontalBar"
      type : 'graph'
      endpoint : "/${appName}/api/dashboard/inventorySummary"
      datalabel : true
      colors :
          labels :
              success : ["In stock"]
              warning : ["Above maximum", "Below reorder", "Below minimum"]
              error : ["No longer in stock"]
    expirationSummary:
      enabled: true
      title: "react.dashboard.expirationSummaryData.title.label"
      info: "react.dashboard.expirationSummaryData.info.label"
      graphType: "line"
      type: 'graph'
      endpoint: "/${appName}/api/dashboard/expirationSummary"
      timeFilter: true
      colors:
        datasets:
          state6: ["Expiration(s)"]
        labels:
          state5:
            - code: "react.dashboard.timeline.today.label"
              message: "today"
            - code: "react.dashboard.timeline.within30Days.label"
              message: "within 30 days"
            - code: "react.dashboard.timeline.within90Days.label"
              message: "within 90 days"
            - code: "react.dashboard.timeline.within180Days.label"
              message: "within 180 days"
            - code: "react.dashboard.timeline.within360Days.label"
              message: "within 360 days" 
    incomingStock:
      enabled: true
      title: "react.dashboard.incomingStock.title.label"
      info: "react.dashboard.incomingStock.info.label"
      graphType: "numbers"
      type: "graph"
      endpoint: "/${appName}/api/dashboard/incomingStock"
      colors:
        datasets:
          state6: ["first"]
          state7: ["second"]
          state8: ["third"]   
    outgoingStock:
      enabled: true
      title: "react.dashboard.outgoingStock.title.label"
      info: "react.dashboard.outgoingStock.info.label"
      graphType: "numbers"
      type: "graph"
      endpoint: "/${appName}/api/dashboard/outgoingStock"
      colors:
        datasets:
          success: ["first"]
          warning: ["second"]
          error: ["third"] 
    receivedStockMovements:
      enabled: true
      title: "react.dashboard.receivedStockData.title.label"
      info: "react.dashboard.receivedStockData.info.label"
      graphType: "bar"
      type: "graph"
      endpoint: "/${appName}/api/dashboard/receivedStockMovements"
      timeFilter: true
      stacked: true
      datalabel: true  
    discrepancy:
      enabled: true
      title: "react.dashboard.discrepancy.title.label"
      info: "react.dashboard.discrepancy.info.label"
      graphType: "table"
      type: "graph"
      endpoint: "/${appName}/api/dashboard/discrepancy"
      timeFilter: true  
    delayedShipments:
      enabled: true
      title: "react.dashboard.delayedShipments.title.label"
      info: "react.dashboard.delayedShipments.info.label"
      graphType: "numberTable"
      type: 'graph'
      endpoint: "/${appName}/api/dashboard/delayedShipments"
      colors:
          datasets:
              state5: ["first"]
              state4: ["second"]
              state3: ["third"]
    sentStockMovements :
      enabled : true
      title : "react.dashboard.sentStockMovements.title.label"
      info : "react.dashboard.sentStockMovements.info.label"
      graphType : "bar"
      type : 'graph'
      endpoint : "/${appName}/api/dashboard/sentStockMovements"
      timeFilter : true
      stacked : true
      datalabel : true
    lossCausedByExpiry :
      enabled : false
      title : "react.dashboard.lossCausedByExpiry.title.label"
      info : ""
      graphType : "bar"
      type : 'graph'
      endpoint : "/${appName}/api/dashboard/lossCausedByExpiry"
      timeFilter : true
      stacked : true
      colors :
          datasets :
              success : ["Inventory value not expired last day of month"]
              warning : ["Inventory value expired last day of month"]
              error : ["Inventory value removed due to expiry"]  
    productsInventoried:
      enabled: false
      title: "react.dashboard.productsInventoried.title.label"
      info: ""
      graphType: "numbersCustomColors"
      type: 'graph'
      endpoint: "/${appName}/api/dashboard/productsInventoried"
      colors:
        datasets:
          state6: ["first"]
          state7: ["second"]
          state8: ["third"]   
    percentageAdHoc:
      enabled: true
      title: "react.dashboard.percentageAdHoc.title.label"
      info: "react.dashboard.percentageAdHoc.info.label"
      graphType: "doughnut"
      type: "graph"
      endpoint: "/${appName}/api/dashboard/percentageAdHoc"
      legend: true
      datalabel: true
      colors:
        labels:
          state5: ["STOCK"]
          state4: ["ADHOC"]  
    fillRate :
      enabled : true
      title : "react.dashboard.fillRate.title.label"
      info : "react.dashboard.fillRate.info.label"
      graphType : "bar"
      type : 'graph'
      legend : true
      endpoint : "/${appName}/api/dashboard/fillRate"
      timeFilter : true
      locationFilter : true
      timeLimit : 12
      doubleAxeY : true
      datalabel : false
      size : 'big'
      colors :
          datasets :
              state3 : ["Request lines submitted"]
              state6 : ["Lines cancelled stock out"]
              state2 : ["Average Fill Rate"]
              state8 : ["Average of target Fill Rate"]   
    stockOutLastMonth :
      enabled : true
      title : "react.dashboard.stockOutLastMonth.title.label"
      info : "react.dashboard.stockOutLastMonth.info.label"
      graphType : "doughnut"
      type : 'graph'
      endpoint : "/${appName}/api/dashboard/stockOutLastMonth"
      legend : true
      datalabel : true
      colors :
          labels :
              success : ["Never"]
              warning : ["Stocked out <1 week"]
              state2  : ["Stocked out 1-2 weeks"]
              state1  : ["Stocked out 2-3 weeks"]
              error   : ["Stocked out 3-4 weeks"]  
    numberOfOpenPurchaseOrders :
      enabled : true
      title : "react.dashboard.numberOfOpenPurchaseOrders.title.label"
      info : "react.dashboard.numberOfOpenPurchaseOrders.info.label"
      subtitle : "react.dashboard.subtitle.purchaseOrders.label"
      numberType : 'number'
      type : 'number'
      endpoint : "/${appName}/api/dashboard/openPurchaseOrdersCount"  
  # OpenBoxes identifier config    
  identifier:
    organization:
      minSize: 5
      maxSize: 20
    separator: Constants.DEFAULT_IDENTIFIER_SEPARATOR
    numeric: Constants.RANDOM_IDENTIFIER_NUMERIC_CHARACTERS
    alphabetic: Constants.RANDOM_IDENTIFIER_ALPHABETIC_CHARACTERS
    alphanumeric: Constants.RANDOM_IDENTIFIER_ALPHANUMERIC_CHARACTERS
    transaction:
      format: Constants.DEFAULT_TRANSACTION_NUMBER_FORMAT
    order:
      format: Constants.DEFAULT_ORDER_NUMBER_FORMAT
    product:
      format: Constants.DEFAULT_PRODUCT_NUMBER_FORMAT
    productSupplier:
      prefix:
        enabled: true
      format: Constants.DEFAULT_PRODUCT_SUPPLIER_NUMBER_FORMAT
    receipt:
      format: Constants.DEFAULT_RECEIPT_NUMBER_FORMAT
    requisition:
      format: Constants.DEFAULT_REQUISITION_NUMBER_FORMAT
    shipment:
      format: Constants.DEFAULT_SHIPMENT_NUMBER_FORMAT
    sequenceNumber:
      format: Constants.DEFAULT_SEQUENCE_NUMBER_FORMAT
    invoice:
      format: Constants.DEFAULT_INVOICE_NUMBER_FORMAT
    location:
      format: Constants.DEFAULT_LOCATION_NUMBER_FORMAT  
      organization:
        format: Constants.DEFAULT_ORGANIZATION_NUMBER_FORMAT
        minSize: 2
        maxSize: 4
      purchaseOrder:
        generatorType: IdentifierGeneratorTypeCode.SEQUENCE
        sequenceNumber:
          format: Constants.DEFAULT_PO_SEQUENCE_NUMBER_FORMAT
        properties:
          - destinationPartyCode: "destinationParty.code"   
    defaultProductType:
      id: "DEFAULT"
    productCode:
      generatorType: IdentifierGeneratorTypeCode.SEQUENCE
      delimiter: "${Constants.DEFAULT_IDENTIFIER_SEPARATOR}"
      format: "${productTypeCode}${delimiter}${sequenceNumber}"
      properties:
        - productTypeCode: "code"
  linePrinterTerminal:
    port: "LPT1"
  purchasing:
    approval:
      enabled: false
      minimumAmount: 0.00
      defaultRoleTypes: [RoleType.ROLE_PURCHASE_APPROVER]
    updateUnitPrice:
      enabled: false
      method: USER_DEFINED_PRICE  
  order:
    orderStatusPropertyMap:
      OrderStatus.PLACED:
        - productCode
        - sourceName
        - supplierCode
        - manufacturer
        - manufacturerCode
        - quantity
        - unitPrice
        - unitOfMeasure
        - budgetCode
  purchaseOrder:
    editableProperties:
      - status: PLACED
        deny: ["productCode", "sourceName", "supplierCode", "manufacturer", "manufacturerCode", "quantity", "unitOfMeasure"]
  security:
    rbac:
      rules:
        - controller: '*'
          actions: ['delete']
          accessRules:
            minimumRequiredRole: RoleType.ROLE_SUPERUSER
        - controller: '*'
          actions: ['remove']
          accessRules:
            minimumRequiredRole: RoleType.ROLE_SUPERUSER
        - controller: '*'
          actions: ['removeItem']
          accessRules:
            minimumRequiredRole: RoleType.ROLE_MANAGER
        - controller: 'order'
          actions: ['remove']
          accessRules:
            minimumRequiredRole: RoleType.ROLE_ASSISTANT
        - controller: 'order'
          actions: ['removeOrderItem']
          accessRules:
            minimumRequiredRole: RoleType.ROLE_MANAGER
        - controller: 'order'
          actions: ['deleteDocument']
          accessRules:
            minimumRequiredRole: RoleType.ROLE_ADMIN
        - controller: 'invoice'
          actions: ['eraseInvoice']
          accessRules:
            minimumRequiredRole: RoleType.ROLE_MANAGER
        - controller: 'invoiceApi'
          actions: ['removeItem']
          accessRules:
            minimumRequiredRole: RoleType.ROLE_MANAGER
            supplementalRoles: [RoleType.ROLE_INVOICE]
        - controller: 'stockTransfer'
          actions: ['eraseStockTransfer']
          accessRules:
            minimumRequiredRole: RoleType.ROLE_MANAGER
        - controller: 'stockMovementItemApi'
          actions: ['eraseItem']
          accessRules:
            minimumRequiredRole: RoleType.ROLE_ASSISTANT
        - controller: 'stockMovement'
          actions: ['remove']
          accessRules:
            minimumRequiredRole: RoleType.ROLE_ASSISTANT
        - controller: 'stockRequest'
          actions: ['remove']
          accessRules:
            minimumRequiredRole: RoleType.ROLE_ASSISTANT
        - controller: 'glAccount'
          actions: ['delete']
          accessRules:
            minimumRequiredRole: RoleType.ROLE_SUPERUSER
        - controller: 'glAccountType'
          actions: ['delete']
          accessRules:
            minimumRequiredRole: RoleType.ROLE_SUPERUSER
        - controller: 'preferenceType'
          actions: ['delete']
          accessRules:
            minimumRequiredRole: RoleType.ROLE_SUPERUSER
        - controller: 'purchaseOrderApi'
          actions: ['delete']
          accessRules:
            minimumRequiredRole: RoleType.ROLE_ASSISTANT
        - controller: 'purchaseOrderApi'
          actions: ['rollback']
          accessRules:
            supplementalRoles: [RoleType.ROLE_PURCHASE_APPROVER]
        - controller: 'stockTransferApi'
          actions: ['delete']
          accessRules:
            minimumRequiredRole: RoleType.ROLE_MANAGER
        - controller: 'stockMovementApi'
          actions: ['delete']
          accessRules:
            minimumRequiredRole: RoleType.ROLE_ASSISTANT
        - controller: 'product'
          actions: ['merge']
          accessRules:
            minimumRequiredRole: RoleType.ROLE_ADMIN
  uploads:
    location: "uploads"
  ajaxRequest:
    timeout: 120000
  browser:
    connection:
      status:
        timeout: 8000
  fullstory:
    enabled: false
    debug: false
    host: "fullstory.com"
    org: ""
    namespace: "FS"
  hotjar:
    enabled: false
    hjid: 0
    hjsv: 6
  forecasting:
    enabled: true
    demandPeriod: 365
  bom:
    enabled: false
  signup:
    enabled: true
    recaptcha:
      enabled: false
      v2:
        siteKey: ""
        secretKey: ""  
  additionalQuestions:
      enabled: false
  uservoice:
    widget:
      enabled: false
      position: "right"
  zopim:
    widget:
      enabled: false
      url: "//v2.zopim.com/?2T7RMi7ERqr3s8N20KQ3wOBRudcwosBA"
  helpscout:
    widget:
      color: "#3AB4B1"
      enabled: true
      key: "44ee4f01-5334-4b93-ad25-03037903eb80"
  jira:
    issue:
      collector:
        enabled: false
        url: "https://openboxes.atlassian.net/s/d41d8cd98f00b204e9800998ecf8427e/en_USgc5zl3-1988229788/6318/12/1.4.10/_/download/batch/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector/com.atlassian.jira.collector.plugin.jira-issue-collector-plugin:issuecollector.js?collectorId=fb813fdb"                                  
  mail:
    feedback:
      enabled: false
      recipients:
        - feedback@openboxes.com
    errors:
      enabled: true
      recipients:
        - errors@openboxes.com

springcache:
  defaults:
    eternal: false
    diskPersistent: false
    memoryStoreEvictionPolicy: "LRU"
    timeToLive: 3600
    timeToIdle: 1800
  caches:
    binLocationReportCache: {}
    binLocationSummaryCache: {}
    dashboardCache: {}
    dashboardTotalStockValueCache: {}
    dashboardProductSummaryCache: {}
    dashboardGenericProductSummaryCache: {}
    fastMoversCache: {}
    inventoryBrowserCache: {}
    inventorySnapshotCache: {}
    megamenuCache: {}
    messageCache: {}
    quantityOnHandCache: {}
    selectTagCache: {}
    selectTagsCache: {}
    selectCategoryCache: {}
    selectCatalogsCache: {}                    


grails:
  mail:
    enabled: true
    from: "info@openboxes.com"
    prefix: "[OpenBoxes]"
    host: "localhost"
    port: "25"
    username: null
    password: null
    debug: false
  validateable:
    packages:
      [
        "org.pih.warehouse.api",
        "org.pih.warehouse.fulfillment",
        "org.pih.warehouse.inventory",
        "org.pih.warehouse.order",
        "org.pih.warehouse.request",
        "org.pih.warehouse.shipment",
      ]
  serverURL:
    development: "http://localhost:8080"
    test: "http://test.example.com"
    loadtest: "http://loadtest.example.com"
    production: "http://www.example.com"
  uiPerformance:
    enabled: false

log4j:
  root:
    error: stdout
    additivity: false

  logger:
    fatal:
      'com.gargoylesoftware.htmlunit.javascript.StrictErrorReporter': fatal
      'org.grails.plugin.resource.ResourceMeta': fatal
      'org.codehaus.groovy.grails.web.converters.JSONParsingParameterCreationListener': fatal

    error:
      'org.hibernate.engine.StatefulPersistenceContext.ProxyWarnLog': error
      'org.hibernate.impl.SessionFactoryObjectFactory': error
      'com.gargoylesoftware.htmlunit.DefaultCssErrorHandler': error
      'com.gargoylesoftware.htmlunit.IncorrectnessListenerImpl': error

    warn:
      #'org.mortbay.log': warn
      'org.codehaus.groovy.grails.web.servlet': warn
      'org.codehaus.groovy.grails.web.sitemesh': warn
      'org.codehaus.groovy.grails.web.mapping.filter': warn
      'org.codehaus.groovy.grails.web.mapping': warn
      'org.codehaus.groovy.grails.orm.hibernate': warn
      'org.codehaus.groovy.grails.commons': warn
      'org.codehaus.groovy.grails.plugins': warn
      #'org.codehaus.groovy.grails.orm.hibernate': warn
      'org.docx4j': warn
      'org.apache.http.headers': warn
      'org.apache.ddlutils': warn
      'net.sf.ehcache.hibernate': warn
      'org.hibernate.cache': warn
      #'org.apache.ddlutils': warn

    info:
      'org.liquibase': info
      'org.codehaus.groovy.grails.web.pages': info
      'org.springframework': info
      'org.hibernate': info
      'com.mchange': info
      'org.pih.warehouse': info
      'grails.app': info
      'grails.app.controller': info
      'grails.app.bootstrap': info
      'grails.app.service': info
      'grails.app.task': info
      'grails.plugin.springcache': info
      'BootStrap': info
      'liquibase': info
      'grails.quartz2': info
      'org.quartz': info
      'com.gargoylesoftware.htmlunit': info

    debug:
      'org.apache.cxf': debug
      'grails.plugin.rendering': debug
      'org.apache.commons.mail': debug
      'grails.plugins.raven': debug
      'net.kencochrane.raven': debug 
      'org.apache.http.wire': debug

# Uncomment these lines if you need to enable trace logging
#  logger:
#    trace:
#      'org.hibernate.type.descriptor.sql.BasicBinder': trace
#      'org.hibernate.type': trace    


  plugins:
    jqueryValidation:
      packed: true
      cdn: false  # false or "microsoft"
      additionalMethods: false

  jqueryValidationUi:
    errorClass: 'error'
    validClass: 'valid'
    onsubmit: true
    renderErrorsOnTop: true
    qTip:
        packed: true
        classes: 'ui-tooltip-red ui-tooltip-shadow ui-tooltip-rounded'  
        
  databinding:
    constraints:
      StringConstraintsMap:
        blank     : 'required' # inverse: blank=false, required=true
        creditCard: 'creditcard'
        email     : 'email'
        inList    : 'inList'
        minSize   : 'minlength'
        maxSize   : 'maxlength'
        size      : 'rangelength'
        matches   : 'matches'
        notEqual  : 'notEqual'
        url       : 'url'
        nullable  : 'required'
        unique    : 'unique'
        validator : 'validator'  
      NumberConstraintsMap:
        min: 'min'
        max: 'max'
        range: 'range'
        notEqual: 'notEqual'
        nullable: 'required'
        inList: 'inList'
        unique: 'unique'
        validator: 'validator'   
      CollectionConstraintsMap:
        minSize: 'minlength'
        maxSize: 'maxlength'
        size: 'rangelength'
        nullable: 'required'
        validator: 'validator' 
      DateConstraintsMap:
        min: 'minDate'
        max: 'maxDate'
        range: 'rangeDate'
        notEqual: 'notEqual'
        nullable: 'required'
        inList: 'inList'
        unique: 'unique'
        validator: 'validator'  
      ObjectConstraintsMap:
        nullable: 'required'
        validator: 'validator'
      CustomConstraintsMap:
        phone: 'true'
        phoneUS: 'true'  


                  
 